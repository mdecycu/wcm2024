<h1>About</h1>
<p>靜態網頁: <a href="https://mde.tw/wcm2024">https://mde.tw/wcm2024</a> and <a href="https://s.cycu.org/~pj2022/wcm2024">https://s.cycu.org/~pj2022/wcm2024</a></p>
<p>倉儲: <a href="https://github.com/mdecycu/wcm2024">https://github.com/mdecycu/wcm2024</a></p>
<h1>Programming</h1>
<p>cp2023 上課時所建立的檔案 (使用系上 DNS 設定):<br/><br/><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ER4EWo4ulCRJhdNs0l9d1tsBek7ejh2UQbroue_ue0NnHg?e=yvGgge">cadlab_network_setting.7z</a> (需要下載密碼) - 電腦輔助設計室網路設定批次與 Powershell 檔案 (註: 使用中華電信 IPv6 DNS 設定, w10 星期四之後無法在校網使用 hinet IPv6 DNS server 設定).<br/><br/><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ESCcmplVTVxJnJYZ2pJWh-oBFWsDJxxSYzVh_5LD5Oa5Gg?e=1EysLk">w10_2b_cadlab_network_setting.7z</a> (需要下載密碼) - 電腦輔助設計室網路設定批次與 Powershell 檔案.<br/><br/><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EV5P-1cv-y1Ih5zFT9LyTy0B6vGwNfDVlXYescPWAcMliw?e=LTUnq7">tinyc.7z</a> (需要下載密碼) - 使用 Tiny C Compiler 編譯 C 程式, 包含 gd 與 gnuplot.<br/><br/><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EYLeiM_NMzFHiKnUWpcO9pwBHxwDNjNDC-4F3h_d761wMQ?e=NMdPpv">python3114_git_putty.7z</a> (需要下載密碼) - 將近端 cmsimde 啟動並改版後推向 Github 所需的檔案.</p>
<hr/>
<h4>python</h4>
<p>單機程式轉為全球資訊網服務：</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/content/PDF.html">https://mde.tw/content/PDF.html</a> </p>
<p style="padding-left: 30px;"><a href="https://mde.tw/content/CAD.html">https://mde.tw/content/CAD.html</a> </p>
<p style="padding-left: 30px;"><a href="https://mde.tw/content/cp2022.html">https://mde.tw/content/cp2022.html</a> </p>
<p>使用舊版 Python 建立新版的可攜程式系統:</p>
<p>Python 3.12.0 沒有 tools.msi</p>
<p><a href="https://www.bing.com/ck/a?!&amp;&amp;p=91ef2cbcb9cc640eJmltdHM9MTY5NzY3MzYwMCZpZ3VpZD0zYTQ3ZGJlMS1lOGQ4LTZkNDktMjYyNy1jODk3ZTk0YzZjMDcmaW5zaWQ9NTIyMA&amp;ptn=3&amp;hsh=3&amp;fclid=3a47dbe1-e8d8-6d49-2627-c897e94c6c07&amp;psq=get+pip&amp;u=a1aHR0cHM6Ly9naXRodWIuY29tL3B5cGEvZ2V0LXBpcA&amp;ntb=1">get-pip.py</a></p>
<p>gen_portable_python312.py</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import urllib.request
import os
 
dir_path = os.path.dirname(os.path.realpath(__file__))
# basic files for Python installation
# before 3.12.0
#py_list = ["core", "dev", "exe", "lib", "tcltk", "tools"]
# 3.12.1 no tools.msi
py_list = ["core", "dev", "exe", "lib", "tcltk"]
# Python version
version = "3.12.1"
# Python msi download URL
ftp = "https://www.python.org/ftp/python/" + version + "/amd64/"
# location for Portable Python
path = "y:\\tmp\\Python312"
# create directory
try:
    os.mkdir(path)
except:
    # path exists
    pass
# get Python installation msi files and extract into target dir
for i in py_list:
    filename = i + ".msi"
    url = ftp + filename
    # download basic python msi file
    urllib.request.urlretrieve(url, filename)
    os.system("msiexec.exe /a " + i + ".msi targetdir=" + path)
    # delete msi file
    os.remove(dir_path + "\\" + i + ".msi")
</pre>
<p>cmsimde:</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a></p>
<p>cmsimde 啟動需要下列模組:</p>
<p style="padding-left: 30px;">pip install flask flask_<span class="tipue_search_content_bold">cors</span> bs4 lxml pelican markdown leo pyopenssl</p>
<hr/>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EVAUoMJEeLhNgkyzcuPn-ioBsQyDn-tkZ7PqchPE1a5Jlw?e=THBxiC">tcc with gd, raylib and sdl2.7z</a> (需要下載密碼)</p>
<p style="padding-left: 30px;">解開壓縮後<span style="background-color: #ffff99;">取代原有 tinyc 可攜環境中的 tcc 目錄</span>, 並將 <span style="background-color: #ffff99;">cpp.properties</span> 檔案取代原有 wscite 目錄中的檔案後, 即可直接利用 wscite 編輯器中的 Tools - Go 利用 Tiny C Compiler 執行 C + gd, C + raylib, C + gnuplot 與 C + SDL2 等位於 tcc\c_ex 目錄中的靜態與動態繪圖範例程式.</p>
<p style="padding-left: 30px;"><a href="https://libgd.github.io/manuals/2.2.3/">https://libgd.github.io/manuals/2.2.3/</a></p>
<p style="padding-left: 30px;"><a href="https://www.raylib.com/">https://www.raylib.com/</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/libsdl-org/SDL">https://github.com/libsdl-org/SDL</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/simple2d/simple2d">https://github.com/simple2d/simple2d</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/ryanpcmcquen/basque">https://github.com/ryanpcmcquen/basque</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/actsl/kiss_sdl">https://github.com/actsl/kiss_sdl</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/johnpayne-dev/MinecraftC">https://github.com/johnpayne-dev/MinecraftC</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecycu/F1-Race">https://github.com/mdecycu/F1-Race</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/mdecycu/Run-Away">https://github.com/mdecycu/Run-Away</a> (<a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EbZdnqiBShRDsnXzGLD65hMBrEooFlSPux2szDYs9AZ9Pw?e=NM4JG9">下載 tcc 編譯連結後的可執行檔案</a>, 需要下載密碼)</p>
<p style="padding-left: 60px;"><a href="https://github.com/rapiz1/DungeonRush">https://github.com/rapiz1/DungeonRush</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/pygame/pygame">https://github.com/pygame/pygame</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/pygame-community/pygame-ce">https://github.com/pygame-community/pygame-ce</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/cxong/cdogs-sdl">https://github.com/cxong/cdogs-sdl</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/fabiangreffrath/crispy-doom">https://github.com/fabiangreffrath/crispy-doom</a> </p>
<p style="padding-left: 60px;"><a href="https://github.com/agavrel/42_CheatSheet">https://github.com/agavrel/42_CheatSheet</a> </p>
<p style="padding-left: 90px;"><a href="https://www.cs.colby.edu/maxwell/courses/tutorials/maketutor/">https://www.cs.colby.edu/maxwell/courses/tutorials/maketutor/</a></p>
<p style="padding-left: 90px;"><a href="https://lazyfoo.net/tutorials/SDL/">https://lazyfoo.net/tutorials/SDL/</a> </p>
<p style="padding-left: 90px;"><a href="https://hackmd.io/@seanyih/SDL2-tutorial/">https://hackmd.io/@seanyih/SDL2-tutorial/</a></p>
<p>C 程式的 gd 與 gnupot 繪圖 -&gt; Brython Frontend + Python Backend (<a href="https://github.com/mdecycu/cmsimde">cmsimde</a>)</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/cmsimde">cmsimde</a> <a href="https://pyslvs.github.io/content/Solid%20Edge.html">linked</a> with <a href="https://resources.sw.siemens.com/en-US/download-solid-edge-community-edition">Solid Edge Community edition</a></p>
<p style="padding-left: 30px;"><a href="https://www.codementor.io/@dewetvanthomas/tutorial-arduino-programming-in-c-12b7cztyui">Arduino Programming in C</a></p>
<p>C 程式的動態繪圖 (Game or Simulation):</p>
<p style="padding-left: 30px;">C + <a href="https://github.com/libsdl-org/SDL">SDL</a> 2D Game: 登入 Replit 後, 點擊 <a href="https://replit.com/github/mdecycu/basque">Basque</a>, 將原始碼匯入 Repl 後, 按下 Run 執行</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/tinyc.games">https://github.com/mdecycu/tinyc.games</a></p>
<p>C 程式版次管理與資料庫系統:</p>
<p style="padding-left: 30px;"><a href="https://www.fossil-scm.org">https://www.fossil-scm.org</a></p>
<p style="padding-left: 30px;"><a href="https://www.sqlite.org">https://www.sqlite.org</a></p>
<p>Python 的動態繪圖 (PyQt and Pysdl2):</p>
<p style="padding-left: 30px;"><a href="https://pyslvs.github.io">https://pyslvs.github.io</a></p>
<p style="padding-left: 30px;"><a href="https://github.com/py-sdl/py-sdl2">https://github.com/py-sdl/py-sdl2</a></p>
<p>然後呢?</p>
<p style="padding-left: 30px;">C/C++ and/or Qt:</p>
<p style="padding-left: 60px;"><a href="https://github.com/OpenModelica/OpenModelica">https://github.com/OpenModelica/OpenModelica</a></p>
<p style="padding-left: 90px;"><a href="https://github.com/modelica/VehicleInterfaces">https://github.com/modelica/VehicleInterfaces</a></p>
<p style="padding-left: 90px;"><a href="https://people.inf.ethz.ch/fcellier/Pubs/BG/">https://people.inf.ethz.ch/fcellier/Pubs/BG/</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/CoppeliaRobotics">https://github.com/CoppeliaRobotics</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/cyberbotics/webots">https://github.com/cyberbotics/webots</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/Range-Software/range3">https://github.com/Range-Software/range3</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/bulletphysics/bullet3">https://github.com/bulletphysics/bullet3</a></p>
<p style="padding-left: 30px;">Rust:</p>
<p style="padding-left: 60px;"><a href="https://github.com/KmolYuan/efd-rs">https://github.com/KmolYuan/efd-rs</a></p>
<p style="padding-left: 60px;"><a href="https://github.com/KmolYuan/four-bar-rs">https://github.com/KmolYuan/four-bar-rs</a></p>
<p style="padding-left: 30px;">Typescript:</p>
<p style="padding-left: 60px;"><a href="https://github.com/PMKS-Web/PMKSWeb">https://github.com/PMKS-Web/PMKSWeb</a></p>
<p style="padding-left: 30px;">Mojo:</p>
<p style="padding-left: 60px;"><a href="https://github.com/modularml/mojo">https://github.com/modularml/mojo</a></p>
<h1>Replit</h1>
<p>針對 Replit 關閉原先 repl.co 開發流程中的部署網站後, 使用 Edge 啟動 cmsite 編輯網站時出現 "This site has been reported as unsafe Hosted by 編碼代號.picard.replit.dev", 目前除了透過 Edge 錯誤釣魚網站回報系統外, 就是暫停使用 Edge 瀏覽器登入 Replit, 改用 Firefox 或 Chrome.</p>
<hr/>
<p>假如 Replit 關閉原先的 repl.co, 讓 cmsimde 啟動編輯之後, 只能在 Webview 頁面中運行, 儘管無法透過 Deployment 執行網際協同, 但仍可讓各學員用來編輯管理其從 Github 的倉儲與網站.</p>
<p>尤其若能讓各用戶利用 Replit 管理其取自 Github Classroom 的倉儲, 將更能提升 Github 與 Replit 在課程教學上的使用效能.</p>
<p>讓各學員取自 Github Classroom 的倉儲, 可以推向具有 Admin 權限的 Github 倉儲中:</p>
<p>ssh-keygen 建立 .ssh/id_rsa 與 id_rsa.pub, 將 id_rsa.pub 放入 Github SSH 對應設定區</p>
<p>建立 .ssh/config 如下:</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">Host github.com
# git clone 時的 URL 為 git@github.com:帳號/倉儲.git
User git
Hostname github.com
# 因為 Replit 與 github.com  都支援 IPv4 網路協定因此無需代理主機設定
# ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</pre>
<p>References:</p>
<p style="padding-left: 30px;"><a href="https://intuitiveexplanations.com/tech/replit/">https://intuitiveexplanations.com/tech/replit/</a></p>
<h2>Games</h2>
<p><a href="https://github.com/replit/kaboom">https://github.com/replit/kaboom</a></p>
<p><a href="https://github.com/replit/kaboomsite">https://github.com/replit/kaboomsite</a></p>
<p><a href="https://github.com/replit/replit-py">https://github.com/replit/replit-py</a></p>
<p><a href="https://github.com/replit/replit-ai-python">https://github.com/replit/replit-ai-python</a></p>
<p><a href="https://github.com/replit/replit-ai-modelfarm-typescript">https://github.com/replit/replit-ai-modelfarm-typescript</a></p>
<h1>Typescript</h1>
<p><a href="https://github.com/DesignEngrLab/PMKS">PMKS 原始碼</a> (採 <a href="https://link.springer.com/book/10.1007/978-1-4302-3480-7">Silverlight</a>)</p>
<p><a href="https://github.com/PMKS-Web/PMKSWeb">PMKS + 原始碼</a> (採 <a href="https://link.springer.com/book/10.1007/978-1-4842-9523-6">Typescript</a>)</p>
<p><a href="https://app.pmksplus.com/?0P.kG.K,W.101.MA,A,02xq,1Z,0.GB,B,03Gi,YJ,0.GC,C,M4,2Ox,0.KD,D,06A,X,0.GE,E,02La,2Ch,0..YRAB,AB,Fe,Fe,036G,Hx,c5cae9,A,B,,.YRBCE,BCE,Fe,Fe,01m4,1jJ,303e9f,B,C,E,,.YRCD,CD,Fe,Fe,7z,1Ck,0d125a,C,D,,...JBF">pmks+ 平面機構設計範例1</a>, <a href="https://app.pmksplus.com/?0P.rS.K,4S.101.MA,A,036g,1vM,0.GB,B,04cF,2mG,0.GC,C,03O7,2mG,0.KD,D,02jn,0k7,0..YRAB,AB,Fe,Fe,03sT,2Kp,c5cae9,A,B,,.YRBC,BC,Fe,Fe,03-B,2mG,303e9f,B,C,,.YRCD,CD,Fe,Fe,032y,114,c5cae9,C,D,,...N_6">機構合成範例1</a>, </p>
<p style="padding-left: 30px;">電子書:</p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-3249-1">2018 Pro Typescript</a></p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-4979-6">2019 Essential Typescript</a></p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-6840-7">2021 Developing Web Components with Typescript</a></p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-7011-0">2021 Essential Typescript4</a></p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-8811-5">2022 Modern Full-Stack Development </a></p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-9723-0">2023 Modern Typescript</a></p>
<p style="padding-left: 30px;"><a href="https://link.springer.com/book/10.1007/978-1-4842-9523-6">2023 Typescript Basics</a></p>
<h1>Servers</h1>
<p>stud and stud2 servers are on 229, setup is on usr/portable_python3.10.6 directory.</p>
<p>stud: 32GB Ram and 800GB HD</p>
<p>stud2: 32GB Ram and 2TB HD</p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>